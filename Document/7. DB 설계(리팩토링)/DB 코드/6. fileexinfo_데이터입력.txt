INSERT INTO fileexinfo
values(fileexinfo_seq.nextVal,
'fileex1',
'public class Account 
{
	private String accountNo;	
	private String ownerName;	
	private int balance;		

	public Account(String accountNo, String ownerName,int balance)
	{
		this.accountNo = accountNo;
		this.ownerName =ownerName;
		this.balance = balance;
	}
	public String getAccountNo()
	{
		return this.accountNo;
	}
	public String getOwnerName()
	{
		return this.ownerName;
	}
	public int getBalance()
	{
		return this.balance;
	}
	public void setAccountNo(String accountNo)
	{
		this.accountNo = accountNo;
	}
	public void setOwnerName(String ownerName)
	{
		this.ownerName = ownerName;
	}
	public void setBalance(int balance)
	{
		this.balance = balance;
	}
	public void deposit(int amount)
	{
		this.balance += amount;
	}
	public int withdraw(int amount) throws Exception
	{
		if(amount > this.balance)
		{
			throw new Exception("\"\"잔액이 부족합니다.");
		}
		else
		{
			this.balance -= amount;
			return amount;
		}
	}
}
',
'C:\test\fileEx1.txt',
1432734257758,
99,
635);

INSERT INTO fileexinfo
values(fileexinfo_seq.nextVal,
'fileex2',
'public class Accumulator 
{
	private	int total;
	private int grandTotal;

	public void Accumulator();
	public void Accumulator(int total);

	static
	{
		Accumulator.total = 0;
	}
	
	public int getTotal()
	{
		return this.total;
	}
	public void setTotal(int total)
	{
		this.total = total;
	}
	public static int getGrandTotal()
	{
		return Accumulator.total;
	}
	public static void setGrandTotal(int grandTotal)
	{
		Accumulator.grandTotal = grandTotal;
	}
	public accumulate(int amount)
	{
		this.total +=amount;
		accumulator.grandTotal += amount;
	}
}
',
'C:\test\fileEx2.txt',
1432734257780,
61,
392);


INSERT INTO fileexinfo
values(fileexinfo_seq.nextVal,
'fileex3',
'public class ClientInfo 
{
	private String name;
	private String id;
	private String password;
	private String phoneNo;
	private String address;

	public ClientInfo(){};
	public ClientInfo(String name, String id, String password)
	{
		this.name = name;
		this.id = id;
		this.password = password;
	}
	public ClientInfo(String name, String id, String password, String phoneNum, String address)
	{
		this(name, id,password);
		this.phoneNo = phoneNum;
		this.address = address;
	}
	public String getName()
	{
		return this.name;
	}
	public String getId()
	{
		return this.id;
	}
	public String getPassword()
	{
		return this.password;
	}
	public String getPhoneNo()
	{
		return this.phoneNo;
	}
	public String getAddress()
	{
		return this.address;
	}
	public void setName(String name)
	{
		this.name = name;
	}
	public void setId(String id)
	{
		this.id = id;
	}
	public void setPassword(String password)
	{
		this.password = password;
	}
	public void setPhoneNo(String phoneNo)
	{
		this.phoneNo = phoneNo;
	}
	public void setAddress(String address)
	{
		this.address = address;
	}
	public void changePassword(String password)
	{
		this.password = password;
	}

}
',
'C:\test\fileEx3.txt',
1432734257816,
137,
814);

INSERT INTO fileexinfo
values(fileexinfo_seq.nextVal,
'fileex4',
'public class SquareTestMain 
{
	public static void main(String[] args) 
	{
		Square square1 = new Square(0);
		Square square2 = new Square(10);
		exceptionPrint(square1.getArea());
		exceptionPrint(square2.getArea());
	}
	public static void exceptionPrint(int data)
	{
		if(data == -1)
		{
			System.out.println("데이터를 확인해주세요.");
		}
		else
		{
			System.out.println(data);
		}
	}
}
',
'C:\test\fileEx4.txt',
1432734257829,
42,
242);

INSERT INTO fileexinfo
values(fileexinfo_seq.nextVal,
'fileex5',
'public class PhysicalInfoTestMain 
{
	public static void main(String[] args) 
	{
		PhysicalInfo obj;
		obj = new PhysicalInfo("해리", 10, 123.0f, 35.0f);
		printPhysicalInfo(obj);
		obj.update(11,145.0f, 45.0f);
		printPhysicalInfo(obj);
		obj.update(12,157.0f);
		printPhysicalInfo(obj);
		obj.update(13);
		printPhysicalInfo(obj);
	}
	static void printPhysicalInfo(PhysicalInfo obj)
	{
		System.out.println("이름 : " + obj.getName());
		System.out.println("나이 : "+ obj.getAge());
		System.out.println("키 : " + obj.getHeight());
		System.out.println("몸무게 : " + obj.getWeight());
		System.out.println();		
	}
}
',
'C:\test\fileEx5.txt',
1432734257850,
70,
397);

INSERT INTO fileexinfo
values(fileexinfo_seq.nextVal,
'fileex6',
'public class AppCDInfo extends CDInfo implements Lendable 
{
	private String borrower;
	private String checkOutDate;
	private byte state;


	public AppCDInfo(){}
	public AppCDInfo(String registerNo, String title)
	{
		super(registerNo, title);
	}
	
	public void setBorrower(String borrower)
	{
		this.borrower = borrower;
	}
	public void setCheckOutDate(String checkOutDate)
	{
		this.checkOutDate = checkOutDate;
	}
	public String getBorrower()
	{
		return this.borrower;
	}
	public String getCheckOutDate()
	{
		return this.checkOutDate;
	}
	public void checkOut(String borrower, String date)
	{
		if(state !=0)
			return;
		this.borrower =borrower;
		this.checkOutDate = date;
		System.out.println(borrower +"님이 "+getTitle()+"을 빌리셨습니다.");
		this.state = 1;
	}
	public void checkIn()
	{
		System.out.println(borrower + "님이 "+getTitle()+"을 반납하셨습니다.");
		this.borrower = null;
		this.checkOutDate = null;
		this.state = 0;
	}
}
',
'C:\test\fileEx6.txt',
1432734257875,
98,
640);

INSERT INTO fileexinfo
values(fileexinfo_seq.nextVal,
'fileex7',
'public class Dictionary implements Lendable 
{
	private String title;
	private String checkOutDate;
	private String borrower;
	private byte state;

	public Dictionary(){}
	public Dictionary(String title)
	{
		this.title = title;
	}

	public void setTitle(String title)
	{
		this.title = title;
	}
	public void setCheckOutDate(String checkOutDate)
	{
		this.checkOutDate = checkOutDate;
	}
	public void setBorrower(String borrower)
	{
		this.borrower = borrower;
	}
	public void setState(byte state)
	{
		this.state = state;
	}
	public String getTitle()
	{
		return this.title;
	}
	public String getCheckOutDate()
	{
		return this.checkOutDate;
	}
	public String getBorrower()
	{
		return this.borrower;
	}
	public byte getState()
	{
		return this.state;
	}
	public void checkOut(String borrower, String date)
	{
		if(state != 0)
			return;
		this.borrower = borrower;
		this.checkOutDate = date;
		byte state = 1;
		System.out.println(borrower + "가 "+this.title+"을 "+date+"에 빌렸습니다.");
	}
	public void checkIn()
	{
		this.state = 0;
		System.out.println(this.borrower+"가 "+ this.title+"을 반납하셨습니다.");
		this.borrower = null;
		this.checkOutDate = null;
	}
}
',
'C:\test\fileEx7.txt',
1432734257906,
129,
788);

INSERT INTO fileexinfo
values(fileexinfo_seq.nextVal,
'fileex8',
'public class Rectangle implements Transformable 
{
	private int x;
	private int y;
	private int width;
	private int height;

	public Rectangle(){}
	public Rectangle(int x, int y, int width, int height)
	{
		this.x = x;
		this.y = y;
		this.width = width;
		this.height = height;
	}
	public void setX(int x)
	{
		this.x = x;
	}
	public void setY(int y)
	{
		this.y = y;
	}
	public void setWidth(int width)
	{
		this.width = width;
	}
	public void setHeight(int height)
	{
		this.height = height;
	}
	public int getX()
	{
		return this.x;
	}
	public int getY()
	{
		return this.y;
	}
	public int getWidth()
	{
		return this.width;
	}
	public int getHeight()
	{
		return this.height;
	}
	public void resize(int width, int height)
	{
		this.width = width;
		this.height = height;
	}
	public void moveTo(int x, int y)
	{
		this.x = x;
		this.y = y;
	}
	public void moveBy(int xOffset, int yOffset)
	{
		this.x += xOffset;
		this.y += yOffset;
	}
}
',
'C:\test\fileEx8.txt',
1432734257931,
136,
598);

INSERT INTO fileexinfo
values(fileexinfo_seq.nextVal,
'fileex9',
'import java.util.*;
public class CalendarExample2 
{
	public static void main(String[] args) 
	{
		Calendar calendar = new GregorianCalendar(); 
		//GregorianCalendar() Constructs a default GregorianCalendar using the current time in the default time zone with the default locale.
		TimeZone timeZone = TimeZone.getTimeZone("Europe/London"); //TimeZone	getTimeZone() Gets the time zone.
		calendar.setTimeZone(timeZone);		//void	setTimeZone(TimeZone zone) Sets the time zone with the given time zone value.
		int year = calendar.get(Calendar.YEAR);
		System.out.printf("%d년",year);
	}
}
',
'C:\test\fileEx9.txt',
1432734257943,
72,
437);

INSERT INTO fileexinfo
values(fileexinfo_seq.nextVal,
'fileex10',
'import java.lang.reflect.*;
import java.util.*;

/* Serializable, Cloneable, Iterable<E>, Collection<E>, List<E>, RandomAccess */

public class collectionTest  
{
	public static void main(String[] args) 
	{
		ArrayList<String> arr = new ArrayList<String>();	//ArrayList()Constructs an empty list with an initial capacity of ten.

		Class cls = arr.getClass();
		System.out.println(cls.getName());
		Method method[] = cls.getDeclaredMethods();
		for(int i = 0 ; i < method.length ; i++)
		{
			System.out.println("  " + method[i]);
		}
		arr.add("what");	// public boolean add(E e) Appends the specified element to the end of this list.
		arr.add("the");		
		arr.add("hell");
		Iterator<String> iterator = arr.iterator();	//iterator() Returns an iterator over the elements in this list in proper sequence.
		while(iterator.hasNext())
		{
			String str = iterator.next();	//E next() Returns the next element in the iteration.
			System.out.println(str);
		}
	}
}
',
'C:\test\fileEx10.txt',
1432734257965,
132,
656);





